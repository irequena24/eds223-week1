---
title: "EDS 223: week 1 lab"
format: html
editor: visual
---

Install Packages

```{r}
install.packages("sf")
install.packages("stars")
install.packages("tmap")
install.packages("here")
```

```{r}
library(sf)
library(stars)
library(tmap)
library(here)

```

# Load in Datasets

```{r}
# raster of global elevation
world_elevation <- read_stars(here("data", "worldelevation.tif"))

# country boundaries
world_vector <-  read_sf(here("data/worldvector.gpkg"))

# major cities
world_cities <- read_sf(here("data", "worldcities.gpkg"))

```

```{r}

# MAKE THE MAP

# Remember, its by layer so what ever you put first on the code will be the first layer
## If you add the cities before the raster, then the map will be sized acording to the Cities polygon. 

tm_shape(world_cities) + # plot world_cities first
  tm_dots() +
  tm_text("name") +
tm_shape(world_elevation) +
  tm_raster() +
tm_shape(world_vector) +
  tm_borders() 
```

```{r}
tm_shape(world_vector)+
  tm_polygons(col='lightblue',
              border.col='black',
              lwd= 0.5,
              lty='dashed')
```

```{r}
# Borders with color

tm_shape(world_vector)+
  tm_borders(col='red')
```

```{r}
# Shapes Filled in
tm_shape(world_vector)+
  tm_fill(col='lightblue')
```

```{r}
# Make a CO2 Map
tm_shape(world_vector)+
  tm_fill("CO2_emissions")
```


```{r}
tm_shape(world_cities)+
  tm_squares()

# can also do tm_squares
```



```{r}
tm_shape(world_vector)+
  tm_polygons("life_expectancy",
              palette= c("yellow", "darkgreen"), #define the range from yellow to darkgreen
              title="Life Expenctancy (years)")
```


```{r}
# Another color palete, viridislite
install.packages("viridisLite")
library(viridisLite)

tm_shape(world_vector)+
  tm_polygons("life_expectancy",
              palette= viridis(option = "plasma", 8),
              title = "Life Expectancy (years)")
```



```{r}
tm_shape(world_vector)+
  tm_polygons()+
  tm_shape(world_cities)+
  tm_symbols(size="pop2020", #size of city is the size of the population#
             legend.size.is.portrait = TRUE)

```


```{r}
# remember, flipping around the layers would put the graticules beneath the land

tm_shape(world_vector)+
  tm_graticules()+
  tm_fill()

```


```{r}
tm_shape(world_vector)+
  tm_fill()+
  tm_scale_bar()+
  tm_compass(position = c("left", "top"))

```



```{r}
tmap_mode("view") # This is the interactive feature. By default its tmap_mode("plot") where its static 


tm_shape(world_vector)+
  tm_fill(col="wb_income_region", 
          palette = viridisLite::plasma(5),
          title= "Regional income")+
  tm_layout(bg.color = "grey95",
            main.title = "Global income by country",
            frame = FALSE)
```



```{r}
# SAVING THE MAP TO A PNG

tmap_mode("plot") 

map1 <- tm_shape(world_vector)+
  tm_fill(col="wb_income_region", 
          palette = viridisLite::plasma(5),
          title= "Regional income")+
  tm_layout(bg.color = "grey95",
            main.title = "Global income by country",
            frame = FALSE)


tmap_save(map1, here("tmap-example.png"))
```




